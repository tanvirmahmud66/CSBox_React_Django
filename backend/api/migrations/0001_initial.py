# Generated by Django 4.2.3 on 2023-11-01 11:15

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AssignmentPostDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('body', models.TextField(blank=True, null=True)),
                ('files', models.FileField(blank=True, null=True, upload_to=api.models.assignment_file_upload_path)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('deadline', models.DateTimeField()),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assignments Post Model',
                'verbose_name_plural': 'Assignments Post Model',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='SessionData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('details', models.CharField(blank=True, max_length=300, null=True)),
                ('token', models.CharField(blank=True, max_length=5, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Session Data',
                'verbose_name_plural': 'Session Data',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_verified', models.BooleanField(default=False)),
                ('profile_pic', models.ImageField(blank=True, default='default_profile_pic.webp', null=True, upload_to=api.models.profile_pic_upload_path)),
                ('bio', models.CharField(blank=True, max_length=300, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('profession', models.CharField(blank=True, max_length=300, null=True)),
                ('work_at', models.CharField(blank=True, max_length=300, null=True)),
                ('study_at', models.CharField(blank=True, max_length=300, null=True)),
                ('college', models.CharField(blank=True, max_length=300, null=True)),
                ('school', models.CharField(blank=True, max_length=300, null=True)),
                ('linkedIn', models.CharField(blank=True, max_length=300, null=True)),
                ('github', models.CharField(blank=True, max_length=300, null=True)),
                ('website', models.CharField(blank=True, max_length=300, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profile',
            },
        ),
        migrations.CreateModel(
            name='SessionMemberBlockList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=5)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.sessiondata')),
            ],
            options={
                'verbose_name': 'Session Member Blocklist',
                'verbose_name_plural': 'Session Member Blocklist',
            },
        ),
        migrations.CreateModel(
            name='SessionMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(blank=True, max_length=5, null=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.sessiondata')),
            ],
            options={
                'verbose_name': 'Session Member',
                'verbose_name_plural': 'Sesson Member',
            },
        ),
        migrations.CreateModel(
            name='PostDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_body', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.sessiondata')),
            ],
            options={
                'verbose_name': 'Post Database',
                'verbose_name_plural': 'Post Database',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='FileDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_id', models.IntegerField(blank=True, null=True)),
                ('file', models.FileField(upload_to=api.models.get_file_upload_path)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.sessiondata')),
            ],
            options={
                'verbose_name': 'Documents Model',
                'verbose_name_plural': 'Documents Model',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CommentDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_body', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('commenter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.postdb')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.sessiondata')),
            ],
            options={
                'verbose_name': 'Comment Database',
                'verbose_name_plural': 'Comment Database',
            },
        ),
        migrations.CreateModel(
            name='AssignmentSubmissionDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
                ('submitted', models.BooleanField(default=False)),
                ('submit_at', models.DateTimeField(auto_now_add=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.assignmentpostdb')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.sessiondata')),
                ('submit_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assignment Submission DB',
                'verbose_name_plural': 'Assignment Submission DB',
                'ordering': ['-submit_at'],
            },
        ),
        migrations.AddField(
            model_name='assignmentpostdb',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.sessiondata'),
        ),
    ]
